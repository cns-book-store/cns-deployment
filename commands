$ ./gradlew bootRun
$ ./gradlew bootJar
$ ./gradlew bootBuildImage
$ docker run --rm --name cns-catalog-service -p 8080:8080 cns-catalog-service:0.0.1-SNAPSHOT
$ minikube start
$ minikube image load catalog-service:0.0.1-SNAPSHOT
$ kubectl create deployment cns-catalog-service --image=cns-catalog-service:0.0.1-SNAPSHOT
  deployment.apps/cns-catalog-service created
$ kubectl get deployment
$ kubectl get pod
$ kubectl logs deployment/cns-catalog-service
$ kubectl expose deployment cns-catalog-service --name=cns-catalog-service --port=8080
$ kubectl get service cns-catalog-service
$ kubectl port-forward service/cns-catalog-service 8000:8080
$ kubectl delete service cns-catalog-service
$ kubectl delete deployment cns-catalog-service
$ minikube stop
$ ab -m GET -n 10 -c 5 http://localhost:8080/

$ docker network ls
$ docker build -t cns-catalog-service .
$ ./gradlew bootBuildImage --imageName ghcr.io/cns-book-store/cns-catalog-service --publishImage -PregistryUrl=ghcr.io -PregistryUsername=cns-book-store -PregistryToken=token

minikube start --cpus 2 --memory 4g --driver docker --profile cns
minikube addons enable ingress --profile cns
kubectl apply -f service.yml

kubectl get nodes
kubectl config get-contexts
kubectl config current-context
kubectl config use-context cns
kubectl apply -f services
kubectl apply -f k8s/deployment.yml
kubectl logs deployment/cns-catalog-service
kubectl get svc -l app=catalog-service
kubectl port-forward service/cns-catalog-service 9001:80
kubectl delete pod cns-catalog-service-78cb7557cc-b22xg
kubectl delete all --all --all-namespaces
kubectl get all -n ingress-nginx
